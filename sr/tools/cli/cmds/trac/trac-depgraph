#!/usr/bin/env python
from __future__ import print_function

import argparse
import sys

from sr.tools.trac import Ticket, TracProxy, WrongServer


parser = argparse.ArgumentParser(description="Produce a graph of a ticket's dependencies")
parser.add_argument("ticket", type=int, help="Ticket number to attach")
args = parser.parse_args()


try:
    server = TracProxy()
except WrongServer:
    print("Error: The specified server is not a Trac instance",
          file=sys.stderr)
    sys.exit(1)

tickets = {}

done = set()
todo = set([args.ticket])

print("digraph G {")
print("rankdir=LR;")

while len(todo):
    for num in list(todo):
        t = Ticket(num, server)
        tickets[num] = t

        for dep in t.deps:
            if dep not in done:
                todo.add(dep)

            print("{0} -> {1};".format(dep, num))

        done.add(num)
        todo.remove(num)

for num, ticket in tickets.items():
    props = {}

    if ticket.status == "closed":
        props["style"] = "filled"
        props["color"] = "grey"

    propstr = ""
    for name, val in props.items():
        propstr += """{0}="{1}" """.format(name, val)

    print("{0} [{1}]".format(num, propstr))

print("}")
