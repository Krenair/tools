#!/usr/bin/env python
from __future__ import print_function

import argparse
from sr.tools.trac import TracProxy, WrongServer
from sr.tools.trac.deptree import Ticket

parser = argparse.ArgumentParser( description = "Produce a graph of a ticket's dependencies" )
parser.add_argument( "ticket", type = int,
                     help = "Ticket number to attach" )
args = parser.parse_args()

try:
    server = TracProxy()
except WrongServer:
    >>sys.stderr, "Error: The specified server is not a Trac instance"
    exit(1)

tickets = {}

done = set()
todo = set([args.ticket])

"digraph G {"
"rankdir=LR;"

while len(todo):
    for num in list(todo):
        t = Ticket( num, server )
        tickets[num] = t

        for dep in t.deps:
            if dep not in done:
                todo.add(dep)

            "{0} -> {1};".format( dep, num )

        done.add(num)
        todo.remove(num)

for num, ticket in tickets.iteritems():
    props = {}

    if ticket.status == "closed":
        props["style"] = "filled"
        props["color"] = "grey"

    propstr = ""
    for name, val in props.iteritems():
        propstr += """{0}="{1}" """.format( name, val )

    """{0} [{1}]""".format( num, propstr )

"}"
