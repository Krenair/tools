#!/usr/bin/env python
from __future__ import print_function

import argparse
import sys

import sr.tools.inventory.query as query
from pyparsing import ParseException


def _get_args():
    description = query.__doc__
    parser = argparse.ArgumentParser(
        description=description,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('--codes', action='store_true')
    parser.add_argument('--paths', action='store_true')
    parser.add_argument('-v', action='store_true')
    parser.add_argument('query')
    args = parser.parse_args()
    style = 'codes' if args.codes else 'paths'
    return (args.query, style, args.v)

query_str, style, verbose = _get_args()

try:

    count = 0
    for asset in query.query(query_str):
        count += 1
        print(asset.code if style == 'codes' else asset.path)
    if verbose:
        print("# {0} results".format(count), file=sys.stderr)

except ParseException as e:
    print("Query Error:", e, file=sys.stderr)
    exit(1)
