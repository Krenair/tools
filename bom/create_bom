#!/usr/bin/env python
import os, sys, time, parts_db, bom

def html_header(f):
    f.write("""<html>
<head>
<title>Student Robotics Bill of Materials for ...</title>
<style>
td {
  border-style: solid none none none;
  border-width: 1px;
}
</style>
</head>
<body>
<p>Generated on %s with %s.</p>
<table style="border-style:none;border-spacing:0;">
<tr>
<th>srcode</th>
<th>Description</th>
<th>Distributer</th>
<th>Distributor Order Number</th>
<th>Quantity</th>
<th>Designators</th>
</tr>
""" % (time.asctime(), os.path.basename(sys.argv[0])) )

def html_footer(f):
    f.write("""</body>
</html>""")

if len(sys.argv) < 3:
    print "Usage: %s SCHEMATIC(S) OUTFILE" % (os.path.basename(sys.argv[0]))
    print "Where:"
    print "	- SCHEMATIC is the schematic to read from (can be more than one)"
    print "	- OUTFILE is the output HTML file"
    sys.exit(1)

lib = parts_db.Db(bom.PARTS_DB)
outf = open( sys.argv[-1], "w" )

multibom = bom.MultiBoardBom(lib)

for schem_fname in sys.argv[1:-1]:
    print schem_fname
    schem_name = os.path.basename( schem_fname )

    board = bom.BoardBom(lib, schem_fname, schem_name)
    multibom.add_boards( board, 1 )

html_header(outf)

def srcode_sort(x,y):
    return cmp(x.part["sr-code"], y.part["sr-code"])

lines = multibom.values()
lines.sort(srcode_sort)

for line in lines:
    outf.write("<tr>")
    p = line.part

    if p["sr-code"] == "sr-nothing":
        "Ignore sr-nothing -- we don't want it in HTML BOMs"
        continue

    outf.write( """<td>%(sr-code)s</td>
<td>%(description)s</td>
<td>%(supplier)s</td>""" % p )

    url = p.get_url()
    if url == None:
        outf.write( "<td>%(order-number)s</td>" % p )
    else:
        outf.write( """<td><a href="%s">%s</a></td>""" % ( url,
                                                           p["order-number"] ) )

    outf.write( "<td>%i</td>" % len(line) )
    outf.write( "<td>%s</td>" % ", ".join([x[1] for x in line]) )

    outf.write("</tr>")

html_footer(outf)
